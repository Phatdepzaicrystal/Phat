local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

local keyListUrl = "https://raw.githubusercontent.com/Phatdepzaicrystal/Key/main/keys.json"
local githubApiUrl = "https://api.github.com/repos/Phatdepzaicrystal/Key/contents/keys.json"
local githubToken = "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"

local player = Players.LocalPlayer
local device_id = gethwid and gethwid() or "Unknown"

-- Ki·ªÉm tra n·∫øu kh√¥ng c√≥ key th√¨ kick
if not getgenv().Key then
    player:Kick("‚ö†Ô∏è Key may dau thg da den")
    return
end

-- H√†m t·∫£i JSON t·ª´ GitHub
local function fetchJson(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    return success and HttpService:JSONDecode(response) or nil
end

-- H√†m c·∫≠p nh·∫≠t keys.json tr√™n GitHub
local function updateKeysFile(newKeys)
    local newContent = HttpService:JSONEncode(newKeys)

    local shaResponse = fetchJson(githubApiUrl)
    local sha = shaResponse and shaResponse.sha or ""

    local body = HttpService:JSONEncode({
        message = "üîÑ Update HWID for key",
        content = game.HttpService:JSONEncode(newContent),
        sha = sha
    })

    local headers = {
        ["Authorization"] = "token " .. githubToken,
        ["Content-Type"] = "application/json"
    }

    local response = http and http.request({
        Url = githubApiUrl,
        Method = "PUT",
        Headers = headers,
        Body = body
    })

    if response then
        print("üîÑ GitHub Response:", response.StatusCode, response.Body)
    else
        print("‚ö†Ô∏è Executor kh√¥ng h·ªó tr·ª£ http.request, kh√¥ng th·ªÉ c·∫≠p nh·∫≠t HWID!")
    end
end

local keys = fetchJson(keyListUrl)

if keys then
    local validKey = nil

    -- Ki·ªÉm tra key trong danh s√°ch
    for _, entry in pairs(keys) do
        if entry.code == getgenv().Key then
            validKey = entry
            break
        end
    end

    if validKey then
        -- N·∫øu HWID ƒë√£ t·ªìn t·∫°i nh∆∞ng kh√¥ng kh·ªõp, kick
        if validKey.hwid and validKey.hwid ~= device_id then
            player:Kick("‚ùå Invalid HWID!")
            return
        end

        -- N·∫øu key ch∆∞a c√≥ HWID, l∆∞u HWID m·ªõi v√†o GitHub
        if not validKey.hwid then
            validKey.hwid = device_id
            updateKeysFile(keys)
            print("‚úÖ HWID m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t tr√™n GitHub:", device_id)
        end

        print("‚úÖ Key h·ª£p l·ªá, ch·∫°y script...")
        getgenv().Language = "English"
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Dex-Bear/Vxezehub/refs/heads/main/VxezeHubMain2"))()
    else
        player:Kick("‚ùå Key kh√¥ng h·ª£p l·ªá!")
    end
else
    player:Kick("‚ùå Kh√¥ng th·ªÉ t·∫£i danh s√°ch key t·ª´ GitHub!")
end
