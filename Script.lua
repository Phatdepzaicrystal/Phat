local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- ƒê∆∞·ªùng d·∫´n file keys.json qua raw URL (GET)
local keysUrl = "https://raw.githubusercontent.com/Phatdepzaicrystal/Key/main/keys.json"
-- ƒê∆∞·ªùng d·∫´n GitHub API ƒë·ªÉ update file keys.json
local githubApiUrl = "https://api.github.com/repos/Phatdepzaicrystal/Key/contents/keys.json"
local githubToken = "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" -- Thay b·∫±ng token c·ªßa b·∫°n

-- T·∫°o HWID b·∫±ng c√°ch k·∫øt h·ª£p UserId v√† ClientId (ƒë·ªÉ ƒë·∫£m b·∫£o duy nh·∫•t)
local hwid = gethwid and gethwid() or "Unknown"

-- Ki·ªÉm tra key c√≥ ƒë∆∞·ª£c nh·∫≠p v√†o getgenv().Key kh√¥ng
if not getgenv().Key then
    player:Kick("‚ö†Ô∏è Vui l√≤ng nh·∫≠p key tr∆∞·ªõc khi ch·∫°y script.")
    return
end

-- H√†m l·∫•y d·ªØ li·ªáu JSON t·ª´ m·ªôt URL
local function fetchJson(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    if success then
        return HttpService:JSONDecode(response)
    else
        warn("L·ªói t·∫£i JSON:", response)
        return nil
    end
end

-- L·∫•y danh s√°ch key t·ª´ GitHub
local keysData = fetchJson(keysUrl)
if not keysData then
    player:Kick("‚ùå Kh√¥ng th·ªÉ t·∫£i danh s√°ch key t·ª´ GitHub!")
    return
end

-- T√¨m entry c√≥ tr∆∞·ªùng "key" tr√πng v·ªõi getgenv().Key
local entry = nil
for _, v in ipairs(keysData) do
    if v["key"] == getgenv().Key then
        entry = v
        break
    end
end

if not entry then
    player:Kick("‚ùå Key kh√¥ng h·ª£p l·ªá!")
    return
end

-- Ki·ªÉm tra HWID: n·∫øu ƒë√£ c√≥ v√† kh√¥ng kh·ªõp th√¨ kick
if entry.hwid then
    if entry.hwid ~= hwid then
        player:Kick("‚ùå HWID kh√¥ng kh·ªõp!")
        return
    end
else
    -- N·∫øu ch∆∞a c√≥ HWID, c·∫≠p nh·∫≠t entry v·ªõi HWID hi·ªán t·∫°i
    entry.hwid = hwid

    local newContent = HttpService:JSONEncode(keysData)
    -- GitHub API y√™u c·∫ßu n·ªôi dung ·ªü d·∫°ng Base64. N·∫øu Executor h·ªó tr·ª£ Synapse, d√πng h√†m m√£ h√≥a Base64 c·ªßa Synapse; n·∫øu kh√¥ng, b·∫°n c·∫ßn c√≥ h√†m m√£ h√≥a Base64 ri√™ng.
    local encodedContent = syn and syn.crypt.base64.encode(newContent) or newContent

    -- L·∫•y SHA hi·ªán t·∫°i c·ªßa file keys.json t·ª´ GitHub API
    local apiData = fetchJson(githubApiUrl)
    local currentSHA = apiData and apiData.sha or ""

    local body = {
        message = "üîÑ Update HWID cho key: " .. entry["key"],
        content = encodedContent,
        sha = currentSHA
    }
    local headers = {
        ["Authorization"] = "token " .. githubToken,
        ["Content-Type"] = "application/json"
    }

    if http and http.request then
        local requestData = {
            Url = githubApiUrl,
            Method = "PUT",
            Headers = headers,
            Body = HttpService:JSONEncode(body)
        }
        local success, result = pcall(function() return http.request(requestData) end)
        if success then
            print("‚úÖ HWID ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t:", hwid)
            player:Kick("‚ö†Ô∏è HWID c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c li√™n k·∫øt, vui l√≤ng ch·∫°y l·∫°i script.")
            return
        else
            player:Kick("‚ùå L·ªói c·∫≠p nh·∫≠t HWID!")
            return
        end
    else
        player:Kick("‚ö†Ô∏è Executor kh√¥ng h·ªó tr·ª£ http.request, kh√¥ng th·ªÉ c·∫≠p nh·∫≠t HWID!")
        return
    end
end

-- N·∫øu key v√† HWID h·ª£p l·ªá, ch·∫°y script VxezeHub
print("‚úÖ Key v√† HWID h·ª£p l·ªá! ƒêang ch·∫°y script...")
getgenv().Language = "English"
loadstring(game:HttpGet("https://raw.githubusercontent.com/Dex-Bear/Vxezehub/refs/heads/main/VxezeHubMain2"))()
