local HttpService = game:GetService("HttpService")
local http = (syn and syn.request) or (http and http.request) or http_request or request

local GITHUB_TOKEN = "ghp_xxx"  -- Thay b·∫±ng token GitHub c·ªßa b·∫°n
local REPO = "Phatdepzaicrystal/Key"
local KEYS_FILE = "keys.json"
local HWIDS_FILE = "hwids.json"

local key = getgenv().Key or ""
local hwid = game:GetService("RbxAnalyticsService"):GetClientId()  -- HWID theo thi·∫øt b·ªã

if key == "" then game.Players.LocalPlayer:Kick("‚ö†Ô∏è Vui l√≤ng nh·∫≠p key!") return end

-- H√†m l·∫•y d·ªØ li·ªáu t·ª´ GitHub
local function fetchFile(file)
    local url = "https://raw.githubusercontent.com/"..REPO.."/main/"..file
    local success, response = pcall(function() return game:HttpGet(url) end)
    return success and HttpService:JSONDecode(response) or {}
end

-- H√†m ghi d·ªØ li·ªáu l√™n GitHub
local function uploadToGitHub(file, data)
    local json = HttpService:JSONEncode(data)
    local base64 = syn and syn.crypt.base64.encode(json) or json
    local apiURL = "https://api.github.com/repos/"..REPO.."/contents/"..file

    -- L·∫•y SHA n·∫øu file ƒë√£ t·ªìn t·∫°i
    local sha = nil
    local shaReq = http({Url = apiURL, Method = "GET", Headers = {["Authorization"] = "token "..GITHUB_TOKEN}})
    if shaReq.StatusCode == 200 then
        sha = HttpService:JSONDecode(shaReq.Body).sha
    end

    -- C·∫≠p nh·∫≠t file tr√™n GitHub
    http({
        Url = apiURL, Method = "PUT",
        Headers = {["Authorization"] = "token "..GITHUB_TOKEN, ["Content-Type"] = "application/json"},
        Body = HttpService:JSONEncode({message = "üîê Update "..file, content = base64, sha = sha or ""})
    })
end

-- Ki·ªÉm tra key h·ª£p l·ªá
local keys = fetchFile(KEYS_FILE)
local validKey = false
for _, entry in ipairs(keys) do
    if entry.key == key then validKey = true break end
end
if not validKey then game.Players.LocalPlayer:Kick("‚ùå Key kh√¥ng h·ª£p l·ªá!") return end

-- Ki·ªÉm tra HWID ƒë√£ t·ªìn t·∫°i ch∆∞a
local hwids = fetchFile(HWIDS_FILE)
local hwidExists = false
for _, entry in ipairs(hwids) do
    if entry.hwid == hwid then hwidExists = true break end
end

-- N·∫øu HWID ch∆∞a c√≥ th√¨ l∆∞u v√†o GitHub
if not hwidExists then
    table.insert(hwids, {key = key, hwid = hwid})
    uploadToGitHub(HWIDS_FILE, hwids)
    print("‚úÖ HWID m·ªõi ƒë√£ ƒë∆∞·ª£c l∆∞u tr√™n GitHub:", hwid)
end

print("‚úÖ Key h·ª£p l·ªá, ch·∫°y script...")
loadstring(game:HttpGet("https://raw.githubusercontent.com/Dex-Bear/Vxezehub/refs/heads/main/VxezeHubMain2"))()
