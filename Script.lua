local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")

-- Link file tr√™n GitHub
local keyListUrl = "https://raw.githubusercontent.com/Phatdepzaicrystal/Key/main/keys.json"
local hwidListUrl = "https://raw.githubusercontent.com/Phatdepzaicrystal/Key/main/hwids.json"
local githubApiUrl = "https://api.github.com/repos/Phatdepzaicrystal/Key/contents/hwids.json"
local githubToken = "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"

local player = Players.LocalPlayer
local device_id = gethwid and gethwid() or "Unknown" -- L·∫•y Device ID t·ª´ executor n·∫øu c√≥

if not getgenv().Key then
    player:Kick("‚ö†Ô∏è Vui l√≤ng nh·∫≠p key tr∆∞·ªõc khi ch·∫°y script.")
    return
end

-- H√†m t·∫£i JSON t·ª´ GitHub
local function fetchJson(url)
    local success, response = pcall(function()
        return game:HttpGet(url)
    end)
    return success and HttpService:JSONDecode(response) or nil
end

local keys = fetchJson(keyListUrl)
local hwids = fetchJson(hwidListUrl) or {}

if keys then
    local validKey = nil

    -- Ki·ªÉm tra key trong danh s√°ch
    for _, entry in pairs(keys) do
        if entry.code == getgenv().Key then
            validKey = entry
            break
        end
    end

    if validKey then
        -- Ki·ªÉm tra n·∫øu HWID ƒë√£ t·ªìn t·∫°i nh∆∞ng Key kh√°c
        for _, entry in pairs(hwids) do
            if entry.hwid == device_id and entry.key ~= getgenv().Key then
                player:Kick("‚ùå Thi·∫øt b·ªã n√†y ƒë√£ d√πng key kh√°c tr∆∞·ªõc ƒë√≥!")
                return
            end
        end

        -- N·∫øu HWID ch∆∞a c√≥, l∆∞u v√†o `hwids.json`
        local newEntry = { key = getgenv().Key, hwid = device_id }
        table.insert(hwids, newEntry)

        -- C·∫≠p nh·∫≠t file tr√™n GitHub
        local newContent = HttpService:JSONEncode(hwids)
        local encodedContent = syn and syn.crypt.base64.encode(newContent) or newContent

        local body = {
            message = "üîÑ C·∫≠p nh·∫≠t HWID + Key",
            content = encodedContent,
            sha = fetchJson(githubApiUrl) and fetchJson(githubApiUrl).sha or ""
        }

        local headers = {
            ["Authorization"] = "token " .. githubToken,
            ["Content-Type"] = "application/json"
        }

        if http and http.request then
            http.request({
                Url = githubApiUrl,
                Method = "PUT",
                Headers = headers,
                Body = HttpService:JSONEncode(body)
            })
            print("‚úÖ HWID + Key ƒë√£ ƒë∆∞·ª£c l∆∞u:", device_id, "-", getgenv().Key)
        else
            print("‚ö†Ô∏è Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t HWID, executor kh√¥ng h·ªó tr·ª£ `http.request`!")
        end

        print("‚úÖ Key h·ª£p l·ªá, ch·∫°y script...")
        getgenv().Language = "English"
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Dex-Bear/Vxezehub/refs/heads/main/VxezeHubMain2"))()
    else
        player:Kick("‚ùå Key kh√¥ng h·ª£p l·ªá!")
    end
else
    player:Kick("‚ùå Script Down.!")
end
