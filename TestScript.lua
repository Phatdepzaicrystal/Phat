local http = game:GetService("HttpService")
local device_id = gethwid and gethwid() or "Unknown"

-- Thay th·∫ø b·∫±ng th√¥ng tin GitHub c·ªßa b·∫°n
local github_username = "Phatdepzaicrystal"
local repo_name = "Key"
local file_path = "hwid_logs.txt"
local github_token = "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"

-- N·ªôi dung c·∫ßn g·ª≠i
local hwid_data = "Device ID: " .. device_id .. "\n"
-- üîπ URL API GitHub
local url = "https://api.github.com/repos/" .. github_username .. "/" .. repo_name .. "/contents/" .. file_path

-- üîπ H√†m ki·ªÉm tra file c√≥ t·ªìn t·∫°i kh√¥ng
local function get_file_info()
    local success, response = pcall(function()
        return http:GetAsync(url, true)
    end)

    if success then
        local data = http:JSONDecode(response)
        return data.sha or nil -- Tr·∫£ v·ªÅ SHA c·ªßa file n·∫øu t·ªìn t·∫°i
    else
        return nil -- File ch∆∞a t·ªìn t·∫°i
    end
end

-- üîπ H√†m t·∫£i HWID l√™n GitHub
local function upload_hwid()
    local file_sha = get_file_info() -- L·∫•y SHA c·ªßa file (n·∫øu c√≥)

    local jsonData = {
        message = "Update HWID log",
        content = http:Base64Encode(hwid_data), -- M√£ h√≥a n·ªôi dung file
        sha = file_sha -- N·∫øu file t·ªìn t·∫°i, th√™m SHA ƒë·ªÉ update
    }

    local headers = {
        ["Authorization"] = "token " .. github_token,
        ["Accept"] = "application/vnd.github.v3+json"
    }

    local success, response = pcall(function()
        return http:PostAsync(url, http:JSONEncode(jsonData), Enum.HttpContentType.ApplicationJson, false, headers)
    end)

    if success then
        print("‚úÖ HWID ƒë√£ ƒë∆∞·ª£c g·ª≠i l√™n GitHub th√†nh c√¥ng!")
    else
        warn("‚ùå G·ª≠i HWID th·∫•t b·∫°i! Ki·ªÉm tra l·∫°i token v√† quy·ªÅn repo.")
    end
end

-- üîπ G·ª≠i HWID l√™n GitHub
upload_hwid()
